service: projectworks-leave-notify
useDotenv: true
frameworkVersion: '3'
configValidationMode: error
plugins:
  - serverless-plugin-scripts
  - serverless-dotenv-plugin
provider:
  name: aws
  region: ap-southeast-2
  runtime: nodejs16.x
  apiGateway:
    shouldStartNameWithService: true
  logRetentionInDays: 14
  deploymentBucket:
    blockPublicAccess: true # Prevents public access via ACLs or bucket policies.
    serverSideEncryption: AES256
    tags: # Tags that will be added to each of the deployment resources
      ProvisionedBy: ${self:custom.commonTags.provisionedBy}
      Project: ${self:custom.commonTags.project}
  stackTags: # Optional CF stack tags
    ProvisionedBy: ${self:custom.commonTags.provisionedBy}
    Project: ${self:custom.commonTags.project}
  tags: # service wide tags
    ProvisionedBy: ${self:custom.commonTags.provisionedBy}
    Project: ${self:custom.commonTags.project}
    Owner: Ackama
  stage: ${opt:stage, 'staging'}
  # These environment vars are installed into **all** functions in the service
  # environment:
  #   NODE_OPTIONS: "-r source-map-support/register"
custom:
  resources:
    prefix: ${self:service}-${self:provider.stage}
    # uploadsBucket: ${self:custom.resources.prefix}-uploads
  commonTags:
    provisionedBy: Serverless
    project: projectworks-leave-notify
  outDir: ${file(./tsconfig.build.json):compilerOptions.outDir}
  prepareForPacking: &prepareForPacking |
    npm run --silent build
  scripts:
    hooks:
      'before:package:createDeploymentArtifacts': *prepareForPacking
      'before:deploy:function:packageFunction': *prepareForPacking
package:
  patterns:
    - '!**/*'
    - 'package.json'
    - 'node_modules/**'
    - '!node_modules/@types/**'
    - '!**/tsconfig*.json'
    - '!**/*.d.ts'
    - '!**/*.gradle'
    - '!**/*.h'
    - '!**/*.html'
    - '!**/*.java'
    - '!**/*.m'
    - '!**/*.map'
    - '!**/*.md'
    - '!**/*.npmignore'
    - '!**/*.pbxproj'
    - '!**/*.pem'
    - '!**/*.podspec'
    - '!**/*.ts'
    - '!**/*.tsbuildinfo'
    - '!**/*.txt'
    - '!**/*.un~'
    - '!**/*.xcworkspacedata'
    - '!**/*.xml'
    - '!**/*.yml'
    - '!**/Makefile'
    - '!**/node_modules/.package-lock.json'
    - ${self:custom.outDir}/**/*
functions:
  weeklyReport:
    handler: ${self:custom.outDir}/handlers.weeklyReport
    events:
      # Run weekly, Sunday 19:00 UTC (Monday 7/8am in NZ)
      - schedule: cron(0 19 ? * 1 *)
    tags:
      Purpose: Create and send the weekly report
  dailyReport:
    handler: ${self:custom.outDir}/handlers.dailyReport
    events:
      # Run daily on week days, 19:00 UTC (7/8am in NZ)
      - schedule: cron(0 19 ? * 1-5 *)
    tags:
      Purpose: Create and send the daily report
# resources:
#   Resources: ${file(./resources.yml)}
